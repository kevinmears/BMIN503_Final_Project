---
title: "Effects of COVID-19 pandemic on hospital-acquired infections"
subtitle: "BMIN503/EPID600 Final Project"
author: "Kevin Mears"
format: html
editor: visual
number-sections: true
embed-resources: true
---

------------------------------------------------------------------------

## Overview {#sec-overview}

The goal of my final project is to determine how the COVID-19 pandemic and the surge in hospital visits, changes in cleaning/hygiene, and people staying at home affected the incidence of hospital-associated infections. I identified the 2020 data set from the CDC National Hospital Care Survey (NHCS) which contains 132,694 inpatients and 388,753 emergency department visits. It contains information including patient age, sex, the month they were discharged, and their diagnoses. I will use this data to determine how the incidence of hospital-associated infections changed month-to-month in 2020 and whether there are correlations with other parameters (e.g. COVID-19 diagnosis).

I spoke with Dr. Joseph Zackular (Assistant Professor of Pathology and Laboratory Medicine at CHOP) who is a bacteriologist and an expert on *C. difficile*, the most common hospital-acquired infection. He suggested I stratify the dataset based on sex and age as demographics that might affect hospital infections. He suggested I look at bacterial pneumonia as a positive control as it is commonly associated with COVID co-infection.

I also spoke with Dr. Kyle Bittinger (Bioinformatics Laboratory Director, CHOP Microbiome Center) who gave suggestions on the code and analysis. For example, he suggested I adjust for other variables (sex, age, etc.) for analyzing the association between COVID-19 and secondary infections. He also suggested I expand on the change over time in age proportions in the bacterial pneumonia as that is the most interesting finding.

[Final Project Github Repo](https://github.com/kevinmears/BMIN503_Final_Project)

## Introduction {#sec-introduction}

Hospital-acquired infections (HAI) are infections acquired after hospital admission. It includes catheter-associated urinary tract infections, central line-associated blood stream infections, surgical site infections, ventilator-associated and hospital-acquired pneumonia, and *Clostridioides difficile* infections. The risk of HAIs depend on many factors, including the facility's disinfection and infection prevention practices, the patient's immune status, length of stay in the hospital, co-morbitities, ventilator support, and use of invasive procedures. Receipt of antibiotics is one of the major risk factors for developing *Clostridioides difficile* infection and other multi-drug resistant bacterial infections (e.g. Vancomycin resistant *Enterococcus* or Methicillin resistant *Staphylococcus aureus*). According to the CDC, about 4% of hospitalized patients experience at least one HAI, with an estimated 648,000 cases in 2011; these are dominated by pneumonia, surgical site infections, gastrointestinal infections, UTIs, and bloodstream infections. *Clostidioides difficile* infection is the most common cause of hospital acquired infections and can cause severe, potentially life-threatening colitis. Common causes of hospital-associated and ventilator-associated pneumonia are *Staphylococcus aureus*, *Pseudomonas aeruginosa*, *E. coli*, and *Klebsiella penumoniae*. Common causes of catheter-associated UTIs are *Enterococcus*, *Staphylcoccus aureus*, *Pseudomonas*, *Proteus, Klebsiella*, and *Candida*. Common causes of surgical site infections include *Staphylococcus aureus*, other *Staphylococcus, Enterococcus, E. coli, Pseudomonas aeruginosa, Enterobacter*, and *Klebsiella*.

The COVID-19 pandemic led to a surge in hospital visits, overwhelming our healthcare system and led to over a million deaths. Coincidentally, disinfection practices intensified in public facilities including hospitals. Many causes of hospital-associated infections, including *C. difficile*, MRSA, VRE, norovirus are difficult to disinfect using traditional cleaning methods. Additionally, antibiotics exposure increased during the pandemic. The present study aims to determine how the COVID-19 pandemic affected the incidence of hospital-associated infections in 2020.

This is an interdisciplinary question because it requires an understanding of microbiology and the various factors that affect pathogenesis, epidemiology to appreciate how disease is spread in a hospital setting, and data science for bioinformatics analysis of hospital survey data.

Sources:

-   Monegro et al. Hospital-Acquired Infections. (2023). In: StatPearls \[Internet\]. Treasure Island (FL): StatPearls Publishing. https://www.ncbi.nlm.nih.gov/books/NBK441857/

-   Dewey et al. Increased Use of Disinfectants During the COVID-19 Pandemic and Its Potential Impacts on Health and Safety. (2021) Acs Chem Health Safety.

-   Dancer, S.J. Controlling Hospital-Acquired Infection: Focus on the Role of the Environment and New Technologies for Decontamination. (2014) Clin Microbiol Rev.

## Methods {#sec-methods}

I used the 2020 data set from the CDC National Hospital Care Survey (NHCS) to answer my question. I first imported the data set and determined the variables available. The useful variables in the data were the age, sex, length of stay, discharge month, and diagnosis.

```{r}
#| label: load-packages
library("tidyverse")
library("ggplot2")
library("cowplot")
library("RColorBrewer")
library("forcats") # for fct_relevel
library("tidymodels")
```

[**Inpatient data set**]{.underline}

```{r}
# Read in NHCS 2020 inpatient Public Use File R Dataset
#https://ftp.cdc.gov/pub/Health_Statistics/NCHS/Datasets/NHCS/2020/R/nhcs2020ip_r.rds
url <- "https://ftp.cdc.gov/pub/Health_Statistics/NCHS/Datasets/NHCS/2020/R/nhcs2020ip_r.rds"
nhcs2020ip <- read_rds(url)
```

```{r}
# inpatient data set
#pull out variables list
var_2020 <- nhcs2020ip$variables

#select useful columns
var_2020_select <- select(var_2020, 1:71)

#variable names 
varnames_2020 <- colnames(var_2020_select)

#pull out primary diagnosis (DX1)
diag1_2020 <- var_2020_select$DX1

#determine the number of primary C. diff infections (ICD-10 diagnosis code: A047)
primaryCdiff_2020 <- sum(diag1_2020 == "A047", na.rm = TRUE)
```

I next determined the proportion of patients that stayed only for 1 day.

```{r}
# count the number of patients that stayed for only 1 day
var_2020_LOS_1 <- var_2020_select |>
  filter(LOS == 1) |>
  summarize(count = n()) |>
  pull(count)

ip_total_count <- var_2020_select |>
  group_by(LOS) |>
  summarize(count = n()) |>
  summarize(sum(count))

prop_ip_routine <- var_2020_LOS_1 / ip_total_count
prop_ip_routine
```

-   16% of inpatient visits stayed only 1 day

```{r}
#combine all diagnosis
alldiag_2020 <- var_2020_select |>
  pivot_longer(
    cols = c(DX1:DX30), 
    values_to = "DX"
  )

#all COVID infections
all_covid <- sum(alldiag_2020 =="U071", na.rm = TRUE)
all_covid

#all C.diff infection
allCdiff <- sum(alldiag_2020 == "A047", na.rm = TRUE)
allCdiff
```

-   There were 6452 total COVID-19 diagnosis.

-   There were 992 total *C. difficile* infection

I assigned the description of the diagnosis (ICD-10 code description) to the data set to better understand the patients in the data set.

```{r}
# Add descriptions to diagnosis
# Read the lines from the file
lines <- readLines("./2021-code-descriptions-tabular-order/icd10cm_codes_2021.txt")

# Split each line by 2 or more spaces
split_lines <- strsplit(lines, "\\s{2,}")

# Find the maximum number of columns
max_length <- max(sapply(split_lines, length))

# Pad shorter rows with NA
padded_lines <- lapply(split_lines, function(x) {
  length(x) <- max_length  # Extend the length
  return(x)  # Returns the padded line
})

# Convert the list to a data frame
icd_code <- do.call(rbind, lapply(padded_lines, function(x) as.data.frame(t(x), stringsAsFactors = FALSE)))

# Optionally, set column names if needed
colnames(icd_code) <- c("DX", "Description")

alldiag_desc <- left_join(alldiag_2020, icd_code)
```

```{r}
# diagnosis arranged by number of cases
alldiag_desc |>
  group_by(Description) |>
  summarize(count = n()) |>
  arrange(desc(count))
```

I next filtered patients who were diagnosed with COVID-19 and hospital-associated infections and subsequently plotted by the variables (sex, age, length of stay, discharge month).

```{r}
#subset COVID-19 patients
covid_patients <- filter(alldiag_2020, DX =="U071")
covid_patients <- covid_patients |>
  filter(!is.na(AGE)) |>
  filter(!is.na(LOS_30DAYS))
```

```{r}
#re-level age
covid_patients <- covid_patients |>
  mutate(age.simplified = cut(AGE, 
                              breaks = c(0, 5, 10, 15, 20, seq(30, 100, by = 10)), 
                              right = FALSE, 
                              labels = c("less than 5", "5-9", "10-14", "15-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80-89", "90+")))

#count(covid_patients, age.simplified)
#count(covid_patients, AGE)
#count(covid_patients, SEX)
#count(covid_patients, LOS) #length of stay
#count(covid_patients, LOS_30DAYS) #greater than 30 days
#count(covid_patients, DISCHARGE_MONTH)
#count(covid_patients, DISCHARGE_STATUS)
```

```{r}
#visualization
ggplot(covid_patients, aes(x = SEX)) +
  geom_bar() +
  labs(x = "Sex", y = "Count") +
  ggtitle("COVID-19 cases by sex") +
  theme_bw()

ggplot(covid_patients, aes(x = age.simplified)) +
  geom_bar() +
  labs(x = "Age", y = "Count") +
  ggtitle("COVID-19 cases by age") +
  theme_bw()

ggplot(covid_patients, aes(x = LOS)) +
  geom_bar() +
  labs(x = "Length of stay (up to 14 days)", y = "Count") +
  ggtitle("COVID-19 cases by length of stay") +
  theme_bw()
#greater than 15 binned in data

ggplot(covid_patients, aes(x = LOS_30DAYS)) +
  geom_bar() +
  labs(x = "Length of stay greater than 30 days", y = "Count") +
  ggtitle("COVID-19 cases by length of stay greater than 30 days") +
  theme_bw()

ggplot(covid_patients, aes(x = DISCHARGE_MONTH)) +
  geom_bar() +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  ggtitle("COVID-19 cases by discharge month") +
  theme_bw()
```

```{r}
#subset bacterial pneumonia patients
bactpneumo_patients <- filter(alldiag_2020, DX %in% c("J13", "J14", "J150", "J151", "J1520", "J15211", "J1529", "J153", "J154", "J155", "J1561", "J1569", "J157", "J158", "J159", "J160"))
#J13     Pneumonia due to Streptococcus pneumoniae
#J14     Pneumonia due to Hemophilus influenzae
#J150    Pneumonia due to Klebsiella pneumoniae
#J151    Pneumonia due to Pseudomonas
#J1520   Pneumonia due to staphylococcus, unspecified
#J15211  Pneumonia due to Methicillin susceptible Staphylococcus aureus
#J15212  Pneumonia due to Methicillin resistant Staphylococcus aureus
#J1529   Pneumonia due to other staphylococcus
#J153    Pneumonia due to streptococcus, group B
#J154    Pneumonia due to other streptococci
#J155    Pneumonia due to Escherichia coli
#J1561   Pneumonia due to Acinetobacter baumannii
#J1569   Pneumonia due to other Gram-negative bacteria
#J157    Pneumonia due to Mycoplasma pneumoniae
#J158    Pneumonia due to other specified bacteria
#J159    Unspecified bacterial pneumonia
#J160    Chlamydial pneumonia
```

```{r}
#re-level age
bactpneumo_patients <- bactpneumo_patients |>
  mutate(age.simplified = cut(AGE, 
                              breaks = c(0, 5, 10, 15, 20, seq(30, 100, by = 10)), 
                              right = FALSE, 
                              labels = c("less than 5", "5-9", "10-14", "15-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80-89", "90+")))

#count(bactpneumo_patients, age.simplified)
#count(bactpneumo_patients, SEX)
#count(bactpneumo_patients, LOS) #length of stay
#count(bactpneumo_patients, LOS_30DAYS) #greater than 30 days
#count(bactpneumo_patients, DISCHARGE_MONTH)
#count(bactpneumo_patients, DISCHARGE_STATUS)
```

```{r}
#visualization
ggplot(bactpneumo_patients, aes(x = SEX)) +
  geom_bar() +
  labs(x = "Sex", y = "Count") +
  ggtitle("Bacterial penumonia cases by sex") +
  theme_bw()

ggplot(bactpneumo_patients, aes(x = age.simplified)) +
  geom_bar() +
  labs(x = "Age", y = "Count") +
    ggtitle("Bacterial penumonia cases by age") +
  theme_bw()

ggplot(bactpneumo_patients, aes(x = LOS)) +
  geom_bar() +
  labs(x = "Length of stay (up to 14 days)", y = "Count") +
    ggtitle("Bacterial penumonia cases by length of stay") +
  theme_bw()
#greater than 15 binned in data

ggplot(bactpneumo_patients, aes(x = LOS_30DAYS)) +
  geom_bar() +
  labs(x = "Length of stay greater than 30 days", y = "Count") +
  ggtitle("Bacterial penumonia cases by length of stay greater than 30 days") +
  theme_bw()

ggplot(bactpneumo_patients, aes(x = DISCHARGE_MONTH)) +
  geom_bar() +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
    ggtitle("Bacterial penumonia cases by discharge month") +
  theme_bw()
```

```{r}
#subset C.diff patients
Cdiff_patients <- filter(alldiag_2020, DX == "A047")
```

```{r}
#plot number of cases by demographics
#re-level age
Cdiff_patients <- Cdiff_patients |>
  mutate(age.simplified = cut(AGE, 
                              breaks = c(0, 5, 10, 15, 20, seq(30, 100, by = 10)), 
                              right = FALSE, 
                              labels = c("less than 5", "5-9", "10-14", "15-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80-89", "90+")))

#count(Cdiff_patients, age.simplified)
#count(Cdiff_patients, SEX)
#count(Cdiff_patients, LOS) #length of stay
#count(Cdiff_patients, LOS_30DAYS) #greater than 30 days
#count(Cdiff_patients, DISCHARGE_MONTH)
#count(Cdiff_patients, DISCHARGE_STATUS)
```

```{r}
#visualization
ggplot(Cdiff_patients, aes(x = SEX)) +
  geom_bar() +
  labs(x = "Sex", y = "Count") +
  ggtitle("C. difficile infection by sex") +
  theme_bw()

ggplot(Cdiff_patients, aes(x = age.simplified)) +
  geom_bar() +
  labs(x = "Age", y = "Count") +
  ggtitle("C. difficile infection by age") +
  theme_bw()

ggplot(Cdiff_patients, aes(x = LOS)) +
  geom_bar() +
  labs(x = "Length of stay (up to 14 days)", y = "Count") +
  ggtitle("C. difficile infection by length of stay") +
  theme_bw()
#greater than 15 binned in data

ggplot(Cdiff_patients, aes(x = LOS_30DAYS)) +
  geom_bar() +
  labs(x = "Length of stay greater than 30 days", y = "Count") +
  ggtitle("C. difficile infection by length of stay greater than 30 days") +
  theme_bw()

ggplot(Cdiff_patients, aes(x = DISCHARGE_MONTH)) +
  geom_bar() +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  ggtitle("C. difficile infection by discharge month") +
  theme_bw()
```

```{r}
#MRSA
mrsa_patients <- filter(alldiag_2020, DX %in% c("A4102", "A4902", "B9562", "J15212"))
#A4102   Sepsis due to Methicillin resistant Staphylococcus aureus
#A4902   Methicillin resistant Staphylococcus aureus infection, unspecified site
#B9562   Methicillin resistant Staphylococcus aureus infection as the cause of diseases classified elsewhere
#J15212  Pneumonia due to Methicillin resistant Staphylococcus aureus

# no MRSA cases in dataset
```

```{r}
#enterococcus
entero_patients <- filter(alldiag_2020, DX %in% c("A4181", "B952"))
#A4181   Sepsis due to Enterococcus
#B952    Enterococcus as the cause of diseases classified elsewhere
```

```{r}
#plot number of cases by demographics
#re-level age
entero_patients <- entero_patients |>
  mutate(age.simplified = cut(AGE, 
                              breaks = c(0, 5, 10, 15, 20, seq(30, 100, by = 10)), 
                              right = FALSE, 
                              labels = c("less than 5", "5-9", "10-14", "15-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80-89", "90+")))

#count(entero_patients, age.simplified)
#count(entero_patients, SEX)
#count(entero_patients, LOS) #length of stay
#count(entero_patients, LOS_30DAYS) #greater than 30 days
#count(entero_patients, DISCHARGE_MONTH)
#count(entero_patients, DISCHARGE_STATUS)
```

```{r}
#visualization
ggplot(entero_patients, aes(x = SEX)) +
  geom_bar() +
  labs(x = "Sex", y = "Count") +
  ggtitle("Enterococcus infections by sex") +
  theme_bw()

ggplot(entero_patients, aes(x = age.simplified)) +
  geom_bar() +
  labs(x = "Age", y = "Count") +
  ggtitle("Enterococcus infections by age") +
  theme_bw()

ggplot(entero_patients, aes(x = LOS)) +
  geom_bar() +
  labs(x = "Length of stay (up to 14 days)", y = "Count") +
  ggtitle("Enterococcus infections by length of stay") +
  theme_bw()
#greater than 15 binned in data

ggplot(entero_patients, aes(x = LOS_30DAYS)) +
  geom_bar() +
  labs(x = "Length of stay greater than 30 days", y = "Count") +
  ggtitle("Enterococcus infections by length of stay greater than 30 days") +
  theme_bw()

ggplot(entero_patients, aes(x = DISCHARGE_MONTH)) +
  geom_bar() +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  ggtitle("Enterococcus infections by discharge month") +
  theme_bw()
```

```{r}
#infections from catheter
infcatheter_patients <- filter(alldiag_2020, DX %in% c("T80211A", "T80211D ", "T80211S", "T80212A", "T80212D", "T80212S", "T80218A", "T80218D", "T80218S", "T80219A", "T80219D", "T80219S"))
#T80211A Bloodstream infection due to central venous catheter, initial encounter
#T80211D Bloodstream infection due to central venous catheter, subsequent encounter
#T80211S Bloodstream infection due to central venous catheter, sequela
#T80212A Local infection due to central venous catheter, initial encounter
#T80212D Local infection due to central venous catheter, subsequent encounter
#T80212S Local infection due to central venous catheter, sequela
#T80218A Other infection due to central venous catheter, initial encounter
#T80218D Other infection due to central venous catheter, subsequent encounter
#T80218S Other infection due to central venous catheter, sequela
#T80219A Unspecified infection due to central venous catheter, initial encounter
#T80219D Unspecified infection due to central venous catheter, subsequent encounter
#T80219S Unspecified infection due to central venous catheter, sequela

# no catheter-associated infections in dataset
```

```{r}
# ventilator-associated pneumonia
ventpenumo_patients <- filter(alldiag_2020, DX =="J95851")
#J95851  Ventilator associated pneumonia

# no ventilator-associated pneumonia cases in dataset
```

```{r}
# surgical site infections
surginf_patients <- filter(alldiag_2020, DX %in% c("T8141XA", "T8141XD", "T8141XS", "T8142XA", "T8142XD", "T8142XS", "T8143XA", "T8143XD", "T8143XS", "O8600", "O8601", "O8602", "O8603", "O8604", "08609"))

#T8141XA Infection following a procedure, superficial incisional surgical site, initial encounter
#T8141XD Infection following a procedure, superficial incisional surgical site, subsequent encounter
#T8141XS Infection following a procedure, superficial incisional surgical site, sequela
#T8142XA Infection following a procedure, deep incisional surgical site, initial encounter
#T8142XD Infection following a procedure, deep incisional surgical site, subsequent encounter
#T8142XS Infection following a procedure, deep incisional surgical site, sequela
#T8143XA Infection following a procedure, organ and space surgical site, initial encounter
#T8143XD Infection following a procedure, organ and space surgical site, subsequent encounter
#T8143XS Infection following a procedure, organ and space surgical site, sequela
#O8600   Infection of obstetric surgical wound, unspecified
#O8601   Infection of obstetric surgical wound, superficial incisional site
#O8602   Infection of obstetric surgical wound, deep incisional site
#O8603   Infection of obstetric surgical wound, organ and space site
#O8604   Sepsis following an obstetrical procedure
#O8609   Infection of obstetric surgical wound, other surgical site

# no surgical site infection cases in dataset
```

-   There were no cases of infections associated with surgeries, infections from catheter use, methicillin-resistant Staphylococcus aureus infections, or ventilator-associated pneumonia in the dataset.

```{r}
#plot month data together 
#drop a color for COVID to make uniform
colors_set3 <- brewer.pal(n = 12, name = "Set3")[-1]

covid_month <- ggplot(covid_patients, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_manual(values = colors_set3) +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  theme_bw() +
  theme(legend.position = "none")

#adjust margins for cowplot
covid_month <- covid_month + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

bactpneumo_month <- ggplot(bactpneumo_patients, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  theme_bw() +
  theme(legend.position = "none")

#adjust margins for cowplot
bactpneumo_month <- bactpneumo_month + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

cdiff_month <- ggplot(Cdiff_patients, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  theme_bw() +
  theme(legend.position = "none")

#adjust margins for cowplot
cdiff_month <- cdiff_month + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

entero_month <- ggplot(entero_patients, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  theme_bw() +
  theme(legend.position = "none")

entero_month <- entero_month + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

plot_grid(covid_month, bactpneumo_month, cdiff_month, entero_month, labels = c('COVID-19', 'Bacterial pneumonia', 'C. difficile', 'Enterococcus'), label_size = 12, label_x = -0.05, label_y = 1)
```

Next, I analyzed for association between discharge month and infection.

```{r}
# determine whether discharge month is associated with COVID 

# filter DISCHARGE_MONTH and DX columns
dx_month <- alldiag_2020 |>
  select(c(DISCHARGE_MONTH, DX))

# Remove NA in DX
dx_month_narm <- dx_month[!is.na(dx_month$DX), ]

# Remove NA in Discharge Month
dx_month_narm <- dx_month_narm[!is.na(dx_month_narm$DISCHARGE_MONTH), ]

# create new column with COVID infection as factor
covid_binary_month <- dx_month_narm |>
  mutate(COVID = ifelse(DX == "U071", 1, 0))

# month as factor
covid_binary_month$DISCHARGE_MONTH <- factor(
  covid_binary_month$DISCHARGE_MONTH, 
  levels = 1:12, 
  labels = month.name
)

# relevel to set reference month to April
covid_binary_month$DISCHARGE_MONTH <- fct_relevel(covid_binary_month$DISCHARGE_MONTH, "April")

# Fit the logistic model
covid.month.fit <- glm(COVID ~ DISCHARGE_MONTH, data = covid_binary_month, family = binomial)

summary(covid.month.fit)
```

```{r}
# evaluate logistic regression 

# set engine
lr_cls_spec <- 
  logistic_reg() |> 
  set_engine("glm")

covid_binary_month_factor <- covid_binary_month |>
  mutate(DISCHARGE_MONTH = as.factor(DISCHARGE_MONTH))

covid_binary_month_factor <- 
  covid_binary_month_factor |>
  mutate(COVID = as.factor(COVID))

# fit model 
lr_cls_fit_covid_month <- 
  lr_cls_spec |>
  fit(COVID ~ DISCHARGE_MONTH, data = covid_binary_month_factor)

lr_cls_fit_covid_month

# model predictive ability
lr_training_pred_covid_month <- bind_cols(
  truth = covid_binary_month_factor$COVID,
  predict(lr_cls_fit_covid_month, covid_binary_month_factor),
  predict(lr_cls_fit_covid_month, covid_binary_month_factor, type = "prob")
)
lr_training_pred_covid_month

autoplot(roc_curve(lr_training_pred_covid_month, 
                   truth, 
                   .pred_0))

roc_auc(lr_training_pred_covid_month, 
        truth, 
        .pred_0)
```

-   Relative to April (the first surge in COVID-19 cases), COVID-19 infection was negatively associated with May-December.
-   The logistic regression model did okay (ROC_AUC = 0.76) at predicting COVID by month.

```{r}
# determine whether discharge month is associated with bacterial pneumonia  

bactpneumo_code <- c("J13", "J14", "J150", "J151", "J1520", "J15211", "J1529", "J153", "J154", "J155", "J1561", "J1569", "J157", "J158", "J159", "J160")

# create new column with COVID infection as factor
bactpneumo_binary_month <- alldiag_2020 |>
  mutate(bactpneumo = ifelse(DX %in% bactpneumo_code, 1, 0))

# Fit the linear model
bactpneumo.month.fit <- glm(bactpneumo ~ factor(DISCHARGE_MONTH), data = bactpneumo_binary_month, family = binomial)

summary(bactpneumo.month.fit)
```

```{r}
# evaluate the logistic regression model
bactpneumo_binary_month_factor <- bactpneumo_binary_month |>
  mutate(DISCHARGE_MONTH = as.factor(DISCHARGE_MONTH))

bactpneumo_binary_month_factor <- 
  bactpneumo_binary_month_factor |>
  mutate(bactpneumo = as.factor(bactpneumo))

# fit model 
lr_cls_fit_bactpneumo_month <- 
  lr_cls_spec |>
  fit(bactpneumo ~ DISCHARGE_MONTH, data = bactpneumo_binary_month_factor)

lr_cls_fit_bactpneumo_month

# model predictive ability
lr_training_pred_bactpneumo_month <- bind_cols(
  truth = bactpneumo_binary_month_factor$bactpneumo,
  predict(lr_cls_fit_bactpneumo_month, bactpneumo_binary_month_factor),
  predict(lr_cls_fit_bactpneumo_month, bactpneumo_binary_month_factor, type = "prob")
)
lr_training_pred_bactpneumo_month

autoplot(roc_curve(lr_training_pred_bactpneumo_month, 
                   truth, 
                   .pred_0))

roc_auc(lr_training_pred_bactpneumo_month, 
        truth, 
        .pred_0)
```

-   Bacterial pneumonia was negatively associated with discharge months Jan, Feb, and Jun\~Oct and positively associated with April.
-   The model performed poorly at predicting bacterial pneumonia by month, only slightly better than random chance (0.5).

```{r}
# determine whether discharge month is associated with C. difficile infection 

# create new column with C. diff infection as factor
cdiff_binary_month <- alldiag_2020 |>
  mutate(cdiff = ifelse(DX == "A047", 1, 0))

# Fit the linear model
cdiff.month.fit <- glm(cdiff ~ factor(DISCHARGE_MONTH), data = cdiff_binary_month, family = binomial)

summary(cdiff.month.fit)
```

```{r}
# evaluate the logistic regression model
cdiff_binary_month_factor <- cdiff_binary_month |>
  mutate(DISCHARGE_MONTH = as.factor(DISCHARGE_MONTH))

cdiff_binary_month_factor <- 
  cdiff_binary_month_factor |>
  mutate(cdiff = as.factor(cdiff))

# fit model 
lr_cls_fit_cdiff_month <- 
  lr_cls_spec |>
  fit(cdiff ~ DISCHARGE_MONTH, data = cdiff_binary_month_factor)

lr_cls_fit_cdiff_month

# model predictive ability
lr_training_pred_cdiff_month <- bind_cols(
  truth = cdiff_binary_month_factor$cdiff,
  predict(lr_cls_fit_cdiff_month, cdiff_binary_month_factor),
  predict(lr_cls_fit_cdiff_month, cdiff_binary_month_factor, type = "prob")
)
lr_training_pred_cdiff_month

autoplot(roc_curve(lr_training_pred_cdiff_month, 
                   truth, 
                   .pred_0))

roc_auc(lr_training_pred_cdiff_month, 
        truth, 
        .pred_0)
```

-   Only January and August was negatively associated with *C. difficile* infection indicating that there is no seasonality in cases.
-   Model performed poorly in predicting C. difficile infection by discharge month.

```{r}
# determine whether discharge month is associated with Enterococcus infection 
entero_code <- c("A4181", "B952")

# create new column with Enterococcus infection as factor
entero_binary_month <- alldiag_2020 |>
  mutate(entero = ifelse(DX %in% entero_code, 1, 0))

# Fit the linear model
entero.month.fit <- glm(entero ~ factor(DISCHARGE_MONTH), data = entero_binary_month, family = binomial)

summary(entero.month.fit)
```

```{r}
# evaluate the logistic regression model
entero_binary_month_factor <- entero_binary_month |>
  mutate(DISCHARGE_MONTH = as.factor(DISCHARGE_MONTH))

entero_binary_month_factor <- 
  entero_binary_month_factor |>
  mutate(entero = as.factor(entero))

# fit model 
lr_cls_fit_entero_month <- 
  lr_cls_spec |>
  fit(entero ~ DISCHARGE_MONTH, data = entero_binary_month_factor)

lr_cls_fit_entero_month

# model predictive ability
lr_training_pred_entero_month <- bind_cols(
  truth = entero_binary_month_factor$entero,
  predict(lr_cls_fit_entero_month, entero_binary_month_factor),
  predict(lr_cls_fit_entero_month, entero_binary_month_factor, type = "prob")
)
lr_training_pred_entero_month

autoplot(roc_curve(lr_training_pred_entero_month, 
                   truth, 
                   .pred_0))

roc_auc(lr_training_pred_entero_month, 
        truth, 
        .pred_0)
```

-   Similar to C. difficle, Enterococcus infection was only negatively associated with January and August indicating no seasonality.
-   The logistic regression model performed poorly in predicting Enterococcus infection by discharge month.

Bacterial pneumonia follows a similar seasonality as COVID-19 as expected, but C. difficile and Enterococcus infections appears to be pretty consistent throughout the year.

Next, I looked at the age distribution of each infection.

```{r}
#plot age data together 
covid_age <- ggplot(covid_patients, aes(x = age.simplified, fill = age.simplified)) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  labs(x = "Age", y = "Count") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none")

#adjust margins for cowplot
covid_age <- covid_age + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

bactpneumo_age <- ggplot(bactpneumo_patients, aes(x = age.simplified, fill = age.simplified)) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  labs(x = "Age", y = "Count") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none")

#adjust margins for cowplot
bactpneumo_age <- bactpneumo_age + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

cdiff_age <- ggplot(Cdiff_patients, aes(x = age.simplified, fill = age.simplified)) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  labs(x = "Age", y = "Count") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none")

#adjust margins for cowplot
cdiff_age <- cdiff_age + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

entero_age <- ggplot(entero_patients, aes(x = age.simplified, fill = age.simplified)) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  labs(x = "Age", y = "Count") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none")

entero_age <- entero_age + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

plot_grid(covid_age, bactpneumo_age, cdiff_age, entero_age, labels = c('COVID-19', 'Bacterial pneumonia', 'C. difficile', 'Enterococcus'), label_size = 12, label_x = -0.05, label_y = 1)
```

```{r}
# Determine whether Age is associated with COVID-19

# filter DISCHARGE_MONTH and DX columns
dx_age <- alldiag_desc |>
  select(c(AGE, DX))

# Remove NA in DX
dx_age_narm <- dx_age[!is.na(dx_age$DX), ]

# Remove NA in Discharge Month
dx_age_narm <- dx_age_narm[!is.na(dx_age_narm$AGE), ]

# create new column with COVID infection as factor
covid_binary_age <- dx_age_narm |>
  mutate(COVID = ifelse(DX == "U071", 1, 0))

# Fit the logistic model
covid.age.fit <- glm(COVID ~ AGE, data = covid_binary_age, family = binomial)

summary(covid.age.fit)

# Bacterial pneumonia 
# create new column with COVID infection as factor
bactpneumo_binary_age <- dx_age_narm |>
  mutate(bactpneumo = ifelse(DX %in% bactpneumo_code, 1, 0))

# Fit the logistic model
bactpneumo.age.fit <- glm(bactpneumo ~ AGE, data = bactpneumo_binary_age, family = binomial)

summary(bactpneumo.age.fit)

# C. difficile
# create new column with COVID infection as factor
cdiff_binary_age <- dx_age_narm |>
  mutate(cdiff = ifelse(DX == "A047", 1, 0))

# Fit the logistic model
cdiff.age.fit <- glm(cdiff ~ AGE, data = cdiff_binary_age, family = binomial)

summary(cdiff.age.fit)

# Enterococcus
# create new column with COVID infection as factor
entero_binary_age <- dx_age_narm |>
  mutate(entero = ifelse(DX %in% entero_code, 1, 0))

# Fit the logistic model
entero.age.fit <- glm(entero ~ AGE, data = entero_binary_age, family = binomial)

summary(entero.age.fit)
```

```{r}
# evaluate predictive performance of logistic regression for covid

covid_binary_age_factor <- covid_binary_age |>
  mutate(AGE = as.factor(AGE))

covid_binary_age_factor <- 
  covid_binary_age_factor |>
  mutate(COVID = as.factor(COVID))

# fit model 
lr_cls_fit_covid_age <- 
  lr_cls_spec |>
  fit(COVID ~ AGE, data = covid_binary_age_factor)

lr_cls_fit_covid_age

# model predictive ability
lr_training_pred_covid_age <- bind_cols(
  truth = covid_binary_age_factor$COVID,
  predict(lr_cls_fit_covid_age, covid_binary_age_factor),
  predict(lr_cls_fit_covid_age, covid_binary_age_factor, type = "prob")
)
lr_training_pred_covid_age

autoplot(roc_curve(lr_training_pred_covid_age, 
                   truth, 
                   .pred_0))

roc_auc(lr_training_pred_covid_age, 
        truth, 
        .pred_0)
```

```{r}
# evaluate predictive performance of logistic regression for bacterial pneumonia

bactpneumo_binary_age_factor <- bactpneumo_binary_age |>
  mutate(AGE = as.factor(AGE))

bactpneumo_binary_age_factor <- 
  bactpneumo_binary_age_factor |>
  mutate(bactpneumo = as.factor(bactpneumo))

# fit model 
lr_cls_fit_bactpneumo_age <- 
  lr_cls_spec |>
  fit(bactpneumo ~ AGE, data = bactpneumo_binary_age_factor)

lr_cls_fit_bactpneumo_age

# model predictive ability
lr_training_pred_bactpneumo_age <- bind_cols(
  truth = bactpneumo_binary_age_factor$bactpneumo,
  predict(lr_cls_fit_bactpneumo_age, bactpneumo_binary_age_factor),
  predict(lr_cls_fit_bactpneumo_age, bactpneumo_binary_age_factor, type = "prob")
)
lr_training_pred_bactpneumo_age

autoplot(roc_curve(lr_training_pred_bactpneumo_age, 
                   truth, 
                   .pred_0))

roc_auc(lr_training_pred_bactpneumo_age, 
        truth, 
        .pred_0)
```

```{r}
# evaluate predictive performance of logistic regression for C. difficile

cdiff_binary_age_factor <- cdiff_binary_age |>
  mutate(AGE = as.factor(AGE))

cdiff_binary_age_factor <- 
  cdiff_binary_age_factor |>
  mutate(cdiff = as.factor(cdiff))

# fit model 
lr_cls_fit_cdiff_age <- 
  lr_cls_spec |>
  fit(cdiff ~ AGE, data = cdiff_binary_age_factor)

lr_cls_fit_cdiff_age

# model predictive ability
lr_training_pred_cdiff_age <- bind_cols(
  truth = cdiff_binary_age_factor$cdiff,
  predict(lr_cls_fit_cdiff_age, cdiff_binary_age_factor),
  predict(lr_cls_fit_cdiff_age, cdiff_binary_age_factor, type = "prob")
)
lr_training_pred_cdiff_age

autoplot(roc_curve(lr_training_pred_cdiff_age, 
                   truth, 
                   .pred_0))

roc_auc(lr_training_pred_cdiff_age, 
        truth, 
        .pred_0)
```

```{r}
# evaluate predictive performance of logistic regression for Enterococcus

entero_binary_age_factor <- entero_binary_age |>
  mutate(AGE = as.factor(AGE))

entero_binary_age_factor <- 
  entero_binary_age_factor |>
  mutate(entero = as.factor(entero))

# fit model 
lr_cls_fit_entero_age <- 
  lr_cls_spec |>
  fit(entero ~ AGE, data = entero_binary_age_factor)

lr_cls_fit_entero_age

# model predictive ability
lr_training_pred_entero_age <- bind_cols(
  truth = entero_binary_age_factor$entero,
  predict(lr_cls_fit_entero_age, entero_binary_age_factor),
  predict(lr_cls_fit_entero_age, entero_binary_age_factor, type = "prob")
)
lr_training_pred_entero_age

autoplot(roc_curve(lr_training_pred_entero_age, 
                   truth, 
                   .pred_0))

roc_auc(lr_training_pred_entero_age, 
        truth, 
        .pred_0)
```

-   All 4 infections predominantly affects older individuals (highest 60-69).
-   Despite this, the predictive performance of the logistic model was poor and performed only slightly better than random chance.

```{r}
# proportions by discharge month and age

ggplot(covid_patients, aes(x = DISCHARGE_MONTH, fill = age.simplified)) +
  geom_bar(position = "fill") + 
  scale_fill_brewer(palette = "Spectral") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Discharge Month", y = "Proportion", fill = "Age") +
  ggtitle("COVID-19 cases") +
  theme_bw()

ggplot(bactpneumo_patients, aes(x = DISCHARGE_MONTH, fill = age.simplified)) +
  geom_bar(position = "fill") + 
  scale_fill_brewer(palette = "Spectral") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Discharge Month", y = "Proportion", fill = "Age") +
  ggtitle("Bacterial pneumonia cases") +
  theme_bw()

ggplot(Cdiff_patients, aes(x = DISCHARGE_MONTH, fill = age.simplified)) +
  geom_bar(position = "fill") + 
  scale_fill_brewer(palette = "Spectral") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Discharge Month", y = "Proportion", fill = "Age") +
  ggtitle("C. difficile infections") +
  theme_bw()

ggplot(entero_patients, aes(x = DISCHARGE_MONTH, fill = age.simplified)) +
  geom_bar(position = "fill") + 
  scale_fill_brewer(palette = "Spectral") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Discharge Month", y = "Proportion", fill = "Age") +
  ggtitle("Enterococcus infections") +
  theme_bw()
```

```{r}
# expand on bacterial pneumonia for kids under 10
bactpneumo_under10 <- bactpneumo_patients |>
  filter(AGE < 10)

bactpneumo_under10_plot <- ggplot(bactpneumo_under10, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  xlab("Discharge Month") +
  ggtitle("Bacterial pneumonia cases under 10 years old") +
  theme_bw() +
  theme(legend.position = "none")

bactpneumo_under10_plot

# determine whether discharge month is associated with bacterial pneumonia under 10
alldiag_2020_under10 <- alldiag_2020 |>
  filter(AGE < 10)

bactpneumo_under10_binary_month <- alldiag_2020_under10 |>
  mutate(bactpneumo = ifelse(DX %in% bactpneumo_code, 1, 0))

# Fit the linear model
bactpneumo.under10.month.fit <- glm(bactpneumo ~ factor(DISCHARGE_MONTH), data = bactpneumo_under10_binary_month, family = binomial)

summary(bactpneumo.under10.month.fit)
```

-   The proportion of kids under 10 who were diagnosed for bacterial pneumonia decreased after the first few months.

I next looked at the sex distribution of infection.

```{r}
# plot infection by sex together

covid_sex <- ggplot(covid_patients, aes(x = SEX, fill = SEX)) +
  geom_bar() +
  scale_fill_manual(values = c("Male" = "blue", "Female" = "red")) +
  labs(x = "Sex", y = "Count") +
  ggtitle("COVID-19") +
  theme_bw() +
  theme(legend.position = "none")

bactpneumo_sex <- ggplot(bactpneumo_patients, aes(x = SEX, fill = SEX)) +
  geom_bar() +
  scale_fill_manual(values = c("Male" = "blue", "Female" = "red")) +
  labs(x = "Sex", y = "Count") +
  ggtitle("Bacterial penumonia") +
  theme_bw() +
  theme(legend.position = "none")

cdiff_sex <- ggplot(Cdiff_patients, aes(x = SEX, fill = SEX)) +
  geom_bar() +
  scale_fill_manual(values = c("Male" = "blue", "Female" = "red")) +
  labs(x = "Sex", y = "Count") +
  ggtitle("C. difficile") +
  theme_bw() +
  theme(legend.position = "none")

entero_sex <- ggplot(entero_patients, aes(x = SEX, fill = SEX)) +
  geom_bar() +
  scale_fill_manual(values = c("Male" = "blue", "Female" = "red")) +
  labs(x = "Sex", y = "Count") +
  ggtitle("Enterococcus") +
  theme_bw() +
  theme(legend.position = "none")


plot_grid(covid_sex, bactpneumo_sex, cdiff_sex, entero_sex, label_size = 12, label_x = -0.05, label_y = 1)
```

```{r}
# determine whether sex is assocated with COVID-19 diagnosis

# filter DISCHARGE_MONTH and DX columns
dx_sex <- alldiag_2020 |>
  select(c(SEX, DX))

# Remove NA in DX
dx_sex_narm <- dx_sex[!is.na(dx_sex$DX), ]

# Remove NA in Sex
dx_sex_narm <- dx_sex_narm[!is.na(dx_sex_narm$SEX), ]

# create new column with COVID infection as factor
covid_binary_sex <- dx_sex_narm |>
  mutate(COVID = ifelse(DX == "U071", 1, 0))

# Fit the logistic model
covid.sex.fit <- glm(COVID ~ factor(SEX), data = covid_binary_sex, family = binomial)

summary(covid.sex.fit)

covid_sex_odds <- exp(coef(covid.sex.fit))
covid_sex_odds
```

-   Female sex is significantly negatively associated (0.839 fold) with COVID-19 compared to males.

```{r}
# determine whether sex is assocated with bacterial pneumonia diagnosis

# create new column with COVID infection as factor
bactpneumo_binary_sex <- dx_sex_narm |>
  mutate(bactpneumo = ifelse(DX %in% bactpneumo_code, 1, 0))

# Fit the logistic model
bactpneumo.sex.fit <- glm(bactpneumo ~ factor(SEX), data = bactpneumo_binary_sex, family = binomial)

summary(bactpneumo.sex.fit)

bactpneumo_sex_odds <- exp(coef(bactpneumo.sex.fit))
bactpneumo_sex_odds
```

-   Female sex is also significantly negatively associated (0.662 fold) with bacterial pneumonia diagnosis compared to males.

```{r}
# determine whether sex is assocated with C. difficile infection 

# create new column with COVID infection as factor
cdiff_binary_sex <- dx_sex_narm |>
  mutate(cdiff = ifelse(DX == "A047", 1, 0))

# Fit the logistic model
cdiff.sex.fit <- glm(cdiff ~ factor(SEX), data = cdiff_binary_sex, family = binomial)

summary(cdiff.sex.fit)
```

-   *C. difficile* infection is not associated with a particular sex.

```{r}
# determine whether sex is assocated with Enterococcus infection 

# create new column with COVID infection as factor
entero_binary_sex <- dx_sex_narm |>
  mutate(entero = ifelse(DX %in% entero_code, 1, 0))

# Fit the logistic model
entero.sex.fit <- glm(entero ~ factor(SEX), data = entero_binary_sex, family = binomial)

summary(entero.sex.fit)

entero_sex_odds <- exp(coef(entero.sex.fit))
entero_sex_odds
```

-   Female sex is negatively associated with Enterococcus infection (0.775 fold).

Next, I looked at the association between a COVID-19 diagnosis and hospital-associated infection.

```{r}
# determine whether COVID diagnosis is associated with other hospital-associated infections

alldiag_covid_binary <- var_2020 |>
  mutate(COVID = ifelse(rowSums(select(var_2020, 21:50) == "U071", na.rm = TRUE) > 0, 1, 0))
```

```{r}
# determine whether COVID is associated with bacterial pneumonia

bactpneumo_code <- c("J13", "J14", "J150", "J151", "J1520", "J15211", "J1529", "J153", "J154", "J155", "J1561", "J1569", "J157", "J158", "J159", "J160")

alldiag_bactpneumo_binary <- alldiag_covid_binary |>
  mutate(bactpneumo = ifelse(rowSums(select(alldiag_covid_binary, 21:50) == bactpneumo_code, na.rm = TRUE) > 0, 1, 0))

alldiag_bactpneumo_factor <- alldiag_bactpneumo_binary %>%
  mutate(COVID = factor(COVID, levels = c(0, 1), labels = c("Negative", "Positive")),
         bactpneumo = factor(bactpneumo, levels = c(0,1), labels = c("Negative", "Positive")))

# Create the plot with labeled factors
ggplot(alldiag_bactpneumo_factor, aes(x = bactpneumo, fill = COVID)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("Negative" = "#aaaaaa", "Positive" = "#b20000")) +
  theme_bw() +
  labs(x = "Bacterial Pneumonia", 
       y = "Proportion", 
       fill = "COVID Status")

# Fit the linear model
covid.bactpneumo.fit <- glm(bactpneumo ~ COVID, data = alldiag_bactpneumo_binary, family = binomial)

summary(covid.bactpneumo.fit)

# adjust for sex
covid.bactpneumo.sex.fit <- glm(bactpneumo ~ SEX + COVID, data = alldiag_bactpneumo_binary, family = binomial)

summary(covid.bactpneumo.sex.fit)

# adjust for age
covid.bactpneumo.age.fit <- glm(bactpneumo ~ AGE + COVID, data = alldiag_bactpneumo_binary, family = binomial)

summary(covid.bactpneumo.age.fit)
```

```{r}
# evaluate the predictive ability

# set engine
lr_cls_spec <- 
  logistic_reg() |> 
  set_engine("glm", family = binomial)

# fit model 
lr_cls_fit_bactpneumo_covid <- 
  lr_cls_spec |>
  fit(bactpneumo ~ COVID, data = alldiag_bactpneumo_factor)

lr_cls_fit_bactpneumo_covid

# model predictive ability
lr_training_pred_bactpneumo_covid <- bind_cols(
  truth = alldiag_bactpneumo_factor$bactpneumo,
  predict(lr_cls_fit_bactpneumo_covid, alldiag_bactpneumo_factor),
  predict(lr_cls_fit_bactpneumo_covid, alldiag_bactpneumo_factor, type = "prob")
)
lr_training_pred_bactpneumo_covid

autoplot(roc_curve(lr_training_pred_bactpneumo_covid, 
                   truth, 
                   .pred_Negative))

roc_auc(lr_training_pred_bactpneumo_covid, 
        truth, 
        .pred_Negative)
```

-   A positive coefficient (1.69) and a p-value less than 0.001 indicates that there is a very strong positive association between bacterial pneumonia and COVID diagnosis, regardless of sex or age.
-   However, the predictive ability of the logistic regression is poor.

```{r}
# determine whether COVID is associated with C. difficile colitis

alldiag_cdiff_binary <- alldiag_covid_binary |>
  mutate(Cdiff = ifelse(rowSums(select(alldiag_covid_binary, 21:50) == "A047", na.rm = TRUE) > 0, 1, 0))

alldiag_cdiff_factor <- alldiag_cdiff_binary %>%
  mutate(COVID = factor(COVID, levels = c(0, 1), labels = c("Negative", "Positive")),
         Cdiff = factor(Cdiff, levels = c(0,1), labels = c("Negative", "Positive")))

# Create the plot with labeled factors
ggplot(alldiag_cdiff_factor, aes(x = Cdiff, fill = COVID)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("Negative" = "#aaaaaa", "Positive" = "#b20000")) +
  theme_bw() +
  labs(x = "C. difficile infection", 
       y = "Proportion", 
       fill = "COVID Status")

# Fit the linear model
covid.cdiff.fit <- glm(Cdiff ~ COVID, data = alldiag_cdiff_binary, family = binomial)

summary(covid.cdiff.fit)

# adjust for sex
covid.cdiff.sex.fit <- glm(Cdiff ~ SEX + COVID, data = alldiag_cdiff_binary, family = binomial)

summary(covid.cdiff.sex.fit)

# adjust for age
covid.cdiff.age.fit <- glm(Cdiff ~ AGE + COVID, data = alldiag_cdiff_binary, family = binomial)

summary(covid.cdiff.age.fit)
```

-   There is no association between *C. difficile* colitis and COVID-19 diagnosis.

```{r}
# determine whether COVID diagnosis is associated with Enterococcus infection

alldiag_entero_binary <- alldiag_covid_binary |>
  mutate(Entero = ifelse(rowSums(select(alldiag_covid_binary, 21:50) == entero_code, na.rm = TRUE) > 0, 1, 0))

alldiag_entero_factor <- alldiag_entero_binary %>%
  mutate(COVID = factor(COVID, levels = c(0, 1), labels = c("Negative", "Positive")),
         Entero = factor(Entero, levels = c(0,1), labels = c("Negative", "Positive")))

# Create the plot with labeled factors
ggplot(alldiag_entero_factor, aes(x = Entero, fill = COVID)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("Negative" = "#aaaaaa", "Positive" = "#b20000")) +
  theme_bw() +
  labs(x = "Enterococcus infection", 
       y = "Proportion", 
       fill = "COVID Status")

# Fit the linear model
covid.entero.fit <- glm(Entero ~ COVID, data = alldiag_entero_binary, family = binomial)

summary(covid.entero.fit)

# adjust for sex
covid.entero.sex.fit <- glm(Entero ~ SEX + COVID, data = alldiag_entero_binary, family = binomial)

summary(covid.entero.sex.fit)
```

-   There is no association between Enterococus infection and COVID-19 diagnosis.
-   Age is positively associated with COVID-19 diagnosis.

[**Emergency department data set**]{.underline}

I also looked at the emergency department data set. Note, I did not include this in the results section as majority of patients (\>80%) did not stay more than a day.

```{r}
# Read in NHCS 2020 emergency department R Dataset
url2 <- "https://ftp.cdc.gov/pub/Health_Statistics/NCHS/Datasets/NHCS/2020/R/nhcs2020ed_r.rds"
nhcs2020ed <- read_rds(url2)
```

```{r}
# emergency department dataset
#pull out variables list
var_2020_ed <- nhcs2020ed$variables

#select useful columns
var_2020_ed_select <- select(var_2020_ed, 1:37)

#variable names 
varnames_2020_ed <- colnames(var_2020_ed_select)

#pull out primary diagnosis (DX1)
diag1_2020_ed <- var_2020_ed_select$DX1

#determine the number of primary C. diff infections (ICD-10 diagnosis code: A047)
primaryCdiff_2020_ed <- sum(diag1_2020_ed == "A047", na.rm = TRUE)
```

```{r}
# list primary diagnosis by count
var_2020_ed_select |>
  group_by(DX1) |>
  summarize(count = n()) |>
  arrange(desc(count))

# the code doesn't match exactly, for e.g. R078 has R0781, R0782, R0789 so can't accurately add descriptions. Left as is. The highest counts are chest pain, COVID-19, respiratory infection, joint pain, abdominal pain. 
```

I next determined the proportion of emergency department cases that was "routine to home", i.e. did not stay more than 1 day.

```{r}
var_2020_ed_select |>
  group_by(DISCHARGE_STATUS) |>
  summarize(count = n()) |>
  arrange(desc(count))

ed_routine_to_home <- var_2020_ed_select |>
  filter(DISCHARGE_STATUS == "Routine to home") |>
  summarize(count = n()) |>
  pull(count)

ed_total_count <- var_2020_ed_select |>
  group_by(DISCHARGE_STATUS) |>
  summarize(count = n()) |>
  summarize(sum(count))

prop_ed_routine <- ed_routine_to_home / ed_total_count
prop_ed_routine
```

-   81% routine to home from emergency department.

I next determined the total number of COVID-19 and C. difficile infections in the emergency room data set.

```{r}
#combine all diagnosis
alldiag_2020_ed <- var_2020_ed_select |>
  pivot_longer(
    cols = c(DX1:DX30), 
    values_to = "DX"
  )

#all COVID infections
all_covid_ed <- sum(alldiag_2020_ed =="U071", na.rm = TRUE)
all_covid_ed

#all C.diff infection
allCdiff_ed <- sum(alldiag_2020_ed == "A047", na.rm = TRUE)
allCdiff_ed
```

-   10,140 total COVID-19 diagnosis in emergency department.

-   492 total C.diff infections in emergency department.

I then subsetted the data by diagnosis and created visuals for each hospital aquired infection similar to inpatient data.

```{r}
# Add descriptions to diagnosis (emergency room)
alldiag_desc_ed <- left_join(alldiag_2020_ed, icd_code)
```

```{r}
# diagnosis arranged by number of cases (emergency room)
alldiag_desc_ed |>
  group_by(Description) |>
  summarize(count = n()) |>
  arrange(desc(count))
```

```{r}
#subset COVID-19 patients
covid_patients_ed <- filter(alldiag_2020_ed, DX =="U071")
covid_patients_ed <- covid_patients_ed |>
  filter(!is.na(AGE)) |>
  filter(!is.na(SEX))
```

```{r}
#re-level age
covid_patients_ed <- covid_patients_ed |>
  mutate(age.simplified = cut(AGE, 
                              breaks = c(0, 5, 10, 15, 20, seq(30, 100, by = 10)), 
                              right = FALSE, 
                              labels = c("less than 5", "5-9", "10-14", "15-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80-89", "90+")))

#count(covid_patients_ed, age.simplified)
#count(covid_patients_ed, AGE)
#count(covid_patients_ed, SEX)
#count(covid_patients_ed, DISCHARGE_MONTH)
#count(covid_patients_ed, DISCHARGE_STATUS)
```

```{r}
#visualization
ggplot(covid_patients_ed, aes(x = SEX)) +
  geom_bar() +
  labs(x = "Sex", y = "Count") +
  ggtitle("COVID-19 cases by sex") +
  theme_bw()

ggplot(covid_patients_ed, aes(x = age.simplified)) +
  geom_bar() +
  labs(x = "Age", y = "Count") +
  ggtitle("COVID-19 cases by age") +
  theme_bw()

ggplot(covid_patients_ed, aes(x = DISCHARGE_MONTH)) +
  geom_bar() +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  ggtitle("COVID-19 cases by discharge month") +
  theme_bw()
```

```{r}
#subset bacterial pneumonia patients
bactpneumo_patients_ed <- filter(alldiag_2020_ed, DX %in% c("J13", "J14", "J150", "J151", "J1520", "J15211", "J1529", "J153", "J154", "J155", "J1561", "J1569", "J157", "J158", "J159", "J160"))
#J13     Pneumonia due to Streptococcus pneumoniae
#J14     Pneumonia due to Hemophilus influenzae
#J150    Pneumonia due to Klebsiella pneumoniae
#J151    Pneumonia due to Pseudomonas
#J1520   Pneumonia due to staphylococcus, unspecified
#J15211  Pneumonia due to Methicillin susceptible Staphylococcus aureus
#J15212  Pneumonia due to Methicillin resistant Staphylococcus aureus
#J1529   Pneumonia due to other staphylococcus
#J153    Pneumonia due to streptococcus, group B
#J154    Pneumonia due to other streptococci
#J155    Pneumonia due to Escherichia coli
#J1561   Pneumonia due to Acinetobacter baumannii
#J1569   Pneumonia due to other Gram-negative bacteria
#J157    Pneumonia due to Mycoplasma pneumoniae
#J158    Pneumonia due to other specified bacteria
#J159    Unspecified bacterial pneumonia
#J160    Chlamydial pneumonia
```

```{r}
#re-level age
bactpneumo_patients_ed <- bactpneumo_patients_ed |>
  mutate(age.simplified = cut(AGE, 
                              breaks = c(0, 5, 10, 15, 20, seq(30, 100, by = 10)), 
                              right = FALSE, 
                              labels = c("less than 5", "5-9", "10-14", "15-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80-89", "90+")))

#count(bactpneumo_patients_ed, age.simplified)
#count(bactpneumo_patients_ed, SEX)
#count(bactpneumo_patients_ed, DISCHARGE_MONTH)
#count(bactpneumo_patients_ed, DISCHARGE_STATUS)
```

```{r}
#visualization
ggplot(bactpneumo_patients_ed, aes(x = SEX)) +
  geom_bar() +
  labs(x = "Sex", y = "Count") +
  ggtitle("Bacterial penumonia cases by sex") +
  theme_bw()

ggplot(bactpneumo_patients_ed, aes(x = age.simplified)) +
  geom_bar() +
  labs(x = "Age", y = "Count") +
    ggtitle("Bacterial penumonia cases by age") +
  theme_bw()

ggplot(bactpneumo_patients_ed, aes(x = DISCHARGE_MONTH)) +
  geom_bar() +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
    ggtitle("Bacterial penumonia cases by discharge month") +
  theme_bw()
```

```{r}
#subset C.diff patients
Cdiff_patients_ed <- filter(alldiag_2020_ed, DX == "A047")
```

```{r}
#plot number of cases by demographics
#re-level age
Cdiff_patients_ed <- Cdiff_patients_ed |>
  mutate(age.simplified = cut(AGE, 
                              breaks = c(0, 5, 10, 15, 20, seq(30, 100, by = 10)), 
                              right = FALSE, 
                              labels = c("less than 5", "5-9", "10-14", "15-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80-89", "90+")))

#count(Cdiff_patients_ed, age.simplified)
#count(Cdiff_patients_ed, SEX)
#count(Cdiff_patients_ed, DISCHARGE_MONTH)
#count(Cdiff_patients_ed, DISCHARGE_STATUS)
```

```{r}
#visualization
ggplot(Cdiff_patients_ed, aes(x = SEX)) +
  geom_bar() +
  labs(x = "Sex", y = "Count") +
  ggtitle("C. difficile infection by sex") +
  theme_bw()

ggplot(Cdiff_patients_ed, aes(x = age.simplified)) +
  geom_bar() +
  labs(x = "Age", y = "Count") +
  ggtitle("C. difficile infection by age") +
  theme_bw()

ggplot(Cdiff_patients_ed, aes(x = DISCHARGE_MONTH)) +
  geom_bar() +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  ggtitle("C. difficile infection by discharge month") +
  theme_bw()
```

```{r}
#MRSA
mrsa_patients_ed <- filter(alldiag_2020_ed, DX %in% c("A4102", "A4902", "B9562", "J15212"))
#A4102   Sepsis due to Methicillin resistant Staphylococcus aureus
#A4902   Methicillin resistant Staphylococcus aureus infection, unspecified site
#B9562   Methicillin resistant Staphylococcus aureus infection as the cause of diseases classified elsewhere
#J15212  Pneumonia due to Methicillin resistant Staphylococcus aureus

# no MRSA cases in dataset
```

```{r}
#enterococcus
entero_patients_ed <- filter(alldiag_2020_ed, DX %in% c("A4181", "B952"))
#A4181   Sepsis due to Enterococcus
#B952    Enterococcus as the cause of diseases classified elsewhere
```

```{r}
#plot number of cases by demographics
#re-level age
entero_patients_ed <- entero_patients_ed |>
  mutate(age.simplified = cut(AGE, 
                              breaks = c(0, 5, 10, 15, 20, seq(30, 100, by = 10)), 
                              right = FALSE, 
                              labels = c("less than 5", "5-9", "10-14", "15-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80-89", "90+")))

#count(entero_patients_ed, age.simplified)
#count(entero_patients_ed, SEX)
#count(entero_patients_ed, DISCHARGE_MONTH)
#count(entero_patients_ed, DISCHARGE_STATUS)
```

```{r}
#visualization
ggplot(entero_patients_ed, aes(x = SEX)) +
  geom_bar() +
  labs(x = "Sex", y = "Count") +
  ggtitle("Enterococcus infections by sex") +
  theme_bw()

ggplot(entero_patients_ed, aes(x = age.simplified)) +
  geom_bar() +
  labs(x = "Age", y = "Count") +
  ggtitle("Enterococcus infections by age") +
  theme_bw()

ggplot(entero_patients_ed, aes(x = DISCHARGE_MONTH)) +
  geom_bar() +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  ggtitle("Enterococcus infections by discharge month") +
  theme_bw()
```

```{r}
#infections from catheter
infcatheter_patients_ed <- filter(alldiag_2020_ed, DX %in% c("T80211A", "T80211D ", "T80211S", "T80212A", "T80212D", "T80212S", "T80218A", "T80218D", "T80218S", "T80219A", "T80219D", "T80219S"))
#T80211A Bloodstream infection due to central venous catheter, initial encounter
#T80211D Bloodstream infection due to central venous catheter, subsequent encounter
#T80211S Bloodstream infection due to central venous catheter, sequela
#T80212A Local infection due to central venous catheter, initial encounter
#T80212D Local infection due to central venous catheter, subsequent encounter
#T80212S Local infection due to central venous catheter, sequela
#T80218A Other infection due to central venous catheter, initial encounter
#T80218D Other infection due to central venous catheter, subsequent encounter
#T80218S Other infection due to central venous catheter, sequela
#T80219A Unspecified infection due to central venous catheter, initial encounter
#T80219D Unspecified infection due to central venous catheter, subsequent encounter
#T80219S Unspecified infection due to central venous catheter, sequela

# no catheter-associated infections in dataset
```

```{r}
# surgical site infections
surginf_patients_ed <- filter(alldiag_2020_ed, DX %in% c("T8141XA", "T8141XD", "T8141XS", "T8142XA", "T8142XD", "T8142XS", "T8143XA", "T8143XD", "T8143XS", "O8600", "O8601", "O8602", "O8603", "O8604", "08609"))

#T8141XA Infection following a procedure, superficial incisional surgical site, initial encounter
#T8141XD Infection following a procedure, superficial incisional surgical site, subsequent encounter
#T8141XS Infection following a procedure, superficial incisional surgical site, sequela
#T8142XA Infection following a procedure, deep incisional surgical site, initial encounter
#T8142XD Infection following a procedure, deep incisional surgical site, subsequent encounter
#T8142XS Infection following a procedure, deep incisional surgical site, sequela
#T8143XA Infection following a procedure, organ and space surgical site, initial encounter
#T8143XD Infection following a procedure, organ and space surgical site, subsequent encounter
#T8143XS Infection following a procedure, organ and space surgical site, sequela
#O8600   Infection of obstetric surgical wound, unspecified
#O8601   Infection of obstetric surgical wound, superficial incisional site
#O8602   Infection of obstetric surgical wound, deep incisional site
#O8603   Infection of obstetric surgical wound, organ and space site
#O8604   Sepsis following an obstetrical procedure
#O8609   Infection of obstetric surgical wound, other surgical site

# no cases in dataset
```

I plotted each hospital acquired infection by month to visualize seasonality.

```{r}
#plot month data together 
covid_month_ed <- ggplot(covid_patients_ed, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  theme_bw() +
  theme(legend.position = "none")

#adjust margins for cowplot
covid_month_ed <- covid_month_ed + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

bactpneumo_month_ed <- ggplot(bactpneumo_patients_ed, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  theme_bw() +
  theme(legend.position = "none")

#adjust margins for cowplot
bactpneumo_month_ed <- bactpneumo_month_ed + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

cdiff_month_ed <- ggplot(Cdiff_patients_ed, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  theme_bw() +
  theme(legend.position = "none")

#adjust margins for cowplot
cdiff_month_ed <- cdiff_month_ed + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

entero_month_ed <- ggplot(entero_patients_ed, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  theme_bw() +
  theme(legend.position = "none")

entero_month_ed <- entero_month_ed + theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))

plot_grid(covid_month_ed, bactpneumo_month_ed, cdiff_month_ed, entero_month_ed, labels = c('COVID-19', 'Bacterial pneumonia', 'C. difficile', 'Enterococcus'), label_size = 12, label_x = -0.05, label_y = 1)
```

```{r}
# Compare inpatient and emergency room counts for each

plot_grid(covid_month, covid_month_ed, labels = c('COVID-19 (inpatient)', 'COVID-19 (emergency room)'), label_size = 12, label_x = -0.05, label_y = 1)

# similar trend between inpatient and emergency room (dipped in the summer, surged in the winter)

plot_grid(bactpneumo_month, bactpneumo_month_ed, labels = c('Bact pneumonia (inpatient)', 'Bact pneumonia (ER)'), label_size = 12, label_x = -0.05, label_y = 1)

# similar trend to covid; no difference between inpatient and ER

plot_grid(cdiff_month, cdiff_month_ed, labels = c('C.diff (inpatient)', 'C.diff (emergency room)'), label_size = 12, label_x = -0.05, label_y = 1)

# more seasonality in the emergency room data for C. diff

plot_grid(entero_month, entero_month_ed, labels = c('Enterococcus (inpatient)', 'Enterococcus (ER)'), label_size = 12, label_x = -0.05, label_y = 1)

#ER data seamingly random (surge in June); doesn't seem to coincide with COVID case
```

-   Overall, the inpatient data and emergency room data follows a similar trend by month. There may be more seasonality in the *C. difficile* emergency room data however, with a drop in cases between April and August.

## Results {#sec-results}

I chose to include the inpatient data only, because \>80% of emergency room visitors were sent home while only 16% of inpatient cases were sent home the same day. Length of stay in the hospital is a major factor in acquiring hospital-associated infection. Overall the month-to-month trends for COVID-19 and hospital infections between inpatient and emergency room visits appeared similar.

```{r}
prop_ip_routine
# 16% of inpatient visits stayed only 1 day 
```

```{r}

prop_ed_routine
# 81% routine to home from emergency deparment 
```

All 4 infections (COVID-19, bacterial pneumonia, *C. difficile*, *Enterococcus*) predominantly affected older populations. For all 4, the highest number of cases was between the ages of 60-69.

```{r}
plot_grid(covid_age, bactpneumo_age, cdiff_age, entero_age, labels = c('COVID-19', 'Bacterial pneumonia', 'C. difficile', 'Enterococcus'), label_size = 12, label_x = -0.05, label_y = 1)
```

I also found that there is a negative association between female sex and being diagnosed for COVID-19, bacterial pneumonia, and *Enterococcus* infection. This is consistent with published reports. COVID-19 infection was more prevalent in men than women in the early phases of the pandemic (Abate et al. 2020) and the severity and outcomes from COVID-19 was worse in men (Pradhan and Olsson. 2020). Men also have been reported to develop pneumonia more frequently than women (Gay et al. 2021). Studies have also shown that bloodstreamn infections with vancomycin-resistant enterococci (VRE) has a male preference (Correa-Martinez et al. 2021).

The incidence of *C. difficile* meanwhile was not significantly associated with a particular sex. While published reports are mixed, some studies have shown that *C. difficile* infection encounters are more often female (Young et al. 2022), which is in line with the slightly higher case count in this data set. Together, this analysis shows that the sex-bias in bacterial pneumonia, *Enterococcus*, and *C. difficile* infection was not affected by the COVID-19 pandemic in 2020.

```{r}
plot_grid(covid_sex, bactpneumo_sex, cdiff_sex, entero_sex, label_size = 12, label_x = -0.05, label_y = 1)
```

As expected, there was a correlation between discharge month (which I used as a proxy for diagnosis month since that wasn't available) and COVID-19 diagnosis. Relative to April, COVID-19 was negatively associated with the later months. It also appears that there is a seasonality to COVID-19 cases, where cases dropped in the summer months and surged in the winter.

```{r}
ggplot(covid_patients, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_manual(values = colors_set3) +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  ggtitle("COVID-19 cases by discharge month") +
  theme_bw() +
  theme(legend.position = "none")
```

```{r}
summary(covid.month.fit)
```

Bacterial pneumonia had a similar seasonality as COVID-19, dropping from June to October and surging in the colder months. Analysis of the association of COVID-19 infection and bacterial pneumonia diagnosis reveals a significant positive association, indicating that COVID-19 infection increases the risk of bacterial pneumonia. Secondary bacterial infection is a important contributor to mortality following viral infection, including COVID-19 (Morens et al. 2008, Gao et al. 2023). Interestingly, the incidence of bacterial pneumonia by age changed throughout 2020, where children under the age of 10 that made up nearly 20% of cases in January significantly decreased, likely due to changes in exposure from the COVID-19 pandemic.

```{r}
ggplot(bactpneumo_patients, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  ggtitle("Bacterial penumonia cases by discharge month") +
  theme_bw() +
  theme(legend.position = "none")
```

```{r}
summary(bactpneumo.month.fit)
```

```{r}
# Create the plot with labeled factors
ggplot(alldiag_bactpneumo_factor, aes(x = bactpneumo, fill = COVID)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("Negative" = "#aaaaaa", "Positive" = "#b20000")) +
  theme_bw() +
  labs(x = "Bacterial Pneumonia", 
       y = "Proportion", 
       fill = "COVID Status")

summary(covid.bactpneumo.fit)
```

```{r}
ggplot(bactpneumo_patients, aes(x = DISCHARGE_MONTH, fill = age.simplified)) +
  geom_bar(position = "fill") + 
  scale_fill_brewer(palette = "Spectral") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Discharge Month", y = "Proportion", fill = "Age") +
  ggtitle("Bacterial pneumonia cases") +
  theme_bw()

bactpneumo_under10_plot
```

I next performed a similar analysis for two bacterial pathogens commonly associated with hospital-associated infections outside the lungs. There was no clear seasonality with *C. difficile* infection; cases remained relatively stable throughout the year. Additionally, COVID-19 infection was not associated with *C. difficile* infection. A study that performed a single-center comparison in hospital-associated *C. difficile* infection between 2019 (pre-pandemic) and 2020 (pandemic) also found the incidence remained unchanged; however, their study found that the incidence of hospital-associated *C. difficile* infection was higher in patients with COVID-19 than in non-COVID-19 cases which they attributed to longer hospital stay and increased use of broad-spectrum antibiotics (Vazquez-Cuesta et al. 2022). The discrepancies between their study and my analysis may be reflective of the limitations of a single-center analysis. Several studies reported a lower *C. difficile* infection rate compared to pre-pandemic period (Granata et al. 2022).

```{r}
ggplot(Cdiff_patients, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  ggtitle("C. difficile infection by discharge month") +
  theme_bw() +
  theme(legend.position = "none")

summary(cdiff.month.fit)

# Create the plot with labeled factors
ggplot(alldiag_cdiff_factor, aes(x = Cdiff, fill = COVID)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("Negative" = "#aaaaaa", "Positive" = "#b20000")) +
  theme_bw() +
  labs(x = "C. difficile infection", 
       y = "Proportion", 
       fill = "COVID Status")

summary(covid.cdiff.fit)
```

Similarly, the incidence of *Enterococcus* infection did not have a clear seasonality and there was a lack of association between COVID-19 diagnosis and *Enterococcus* co-infection.

```{r}
ggplot(entero_patients, aes(x = DISCHARGE_MONTH, fill = factor(DISCHARGE_MONTH))) +
  geom_bar() +
  scale_fill_brewer(palette = "Set3") +
  scale_x_continuous(breaks = 1:12) +
  labs(x = "Month", y = "Count") +
  ggtitle("Enterococcus infections by discharge month") +
  theme_bw() +
  theme(legend.position = "none")

summary(entero.month.fit)

# Create the plot with labeled factors
ggplot(alldiag_entero_factor, aes(x = Entero, fill = COVID)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("Negative" = "#aaaaaa", "Positive" = "#b20000")) +
  theme_bw() +
  labs(x = "Enterococcus infection", 
       y = "Proportion", 
       fill = "COVID Status")

summary(covid.entero.fit)
```

## Conclusion

Overall my findings indicate that the COVID-19 pandemic did not significantly influence the incidence of two common hospital-acquired infections (*C. difficile and Enterococcus*) in the early phase of the pandemic. As expected, bacterial pneumonia which is commonly associated with respiratory viral infections had a similar seasonality as COVID-19 and was significantly associated with COVID-19 infection.

This study was limited by the data set available. Ideally, I would've liked to compare the results from 2020 to pre-pandemic levels (2019) and post-pandemic data (2022-). However, these data sets were restricted and not publicly available. Another limitation of this data set was the lack of incidence of other common hospital-acquired infections (e.g. central-line bloodstream infections, catheter-associated UTIs, and MRSA). For example, a study by the CDC found that the incidence of central-line bloodstream infections, catheter-associated UTIs, ventilator-associated infections, and MRSA bacteremia was significantly higher in 2021 than pre-pandemic levels (Lastinger et al. 2022). It would have also been nice to have geographical data as well, since certain regions were more heavily affected by the pandemic than others.

Sources:

Pradhan and Olsson. (2020) Sex differences in severity and mortality from COVID-19: are males more vulnerable? *Biology of Sex Differences.* <https://bsd.biomedcentral.com/articles/10.1186/s13293-020-00330-7>

Abate et al. (2020) Sex difference in coronavirus disease (COVID-19): a systematic review and meta-analysis. *BMJ Open.* [https://bmjopen.bmj.com/content/10/10/e040129](#0)

Gay et al. (2021) Sexual Dimorphism and Gender in Infectious Diseases. *Frontiers in Immunology.* <https://www.frontiersin.org/journals/immunology/articles/10.3389/fimmu.2021.698121/full>

Correa-Martinez et al. (2021) Sex differences in vancomycin-resistant enterococci bloodstream infections—a systematic review and meta-analysis. *Biology of Sex Differences.* <https://bsd.biomedcentral.com/articles/10.1186/s13293-021-00380-5>

Young et al. (2022) Clostridioides difficile Infection Treatment and Outcome Disparities in a National Sample of United States Hospitals. *Antibiotics.* <https://www.mdpi.com/2079-6382/11/9/1203>

Morens et al. (2008) Predominant role of bacterial pneumonia as a cause of death in pandemic influenza: implications for pandemic influenza preparedness. *J Infect Dis.*

Gao et al. (2023) Machine learning links unresolving secondary pneumonia to mortality in patients with severe pneumonia, including COVID-19. *JCI.* <https://www.jci.org/articles/view/170682#B17>

Vazquez-Cuesta et al. (2022) *Clostridioides difficile* infection epidemiology and clinical characteristics in COVID-19 pandemic. *Front. Med.* <https://www.frontiersin.org/journals/medicine/articles/10.3389/fmed.2022.953724/full#B4>

Granata et al. (2022) The burden of *Clostridioides difficile* infection in COVID-19 patients: A systematic review and meta-analysis. *Anaerobe.* <https://www.sciencedirect.com/science/article/pii/S1075996421001670?casa_token=8a_HWG8ihJoAAAAA:mR-h9srMVlu0YMgt7sljtRPskR7M36TMpuaKKY8IlpW0tqyo507Ph1UHeMGFgVu3Xoa8oL1ebQ>

Lastinger et al. (2022) Continued increases in the incidence of healthcare-associated infection (HAI) during the second year of the coronavirus disease 2019 (COVID-19) pandemic. *Infection Control & Hospital Epidemiology.* <https://www.cambridge.org/core/journals/infection-control-and-hospital-epidemiology/article/continued-increases-in-the-incidence-of-healthcareassociated-infection-hai-during-the-second-year-of-the-coronavirus-disease-2019-covid19-pandemic/6521FF7F27B97AD5B21BA4B8EA9888A4>
